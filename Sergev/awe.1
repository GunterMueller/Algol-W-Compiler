.TH AWE 1 "2023-05-17" "awe" "ALGOL W compiler"
.SH "NAME"
awe \- compiler for the ALGOL W language
.SH "SYNOPSIS"
\fBawe\fR \fIsource.alw\fR... [\fBflags\fR] [\fB-o\fR \fIexecutable\fR | \fB-c\fR \fIobject.c\fR | \fB-p\fR \fIobject.c\fR]
.SH "DESCRIPTION"
Awe implements the language described in the 
\fIALGOL W Language Description, June 1972\fR very closely.  
\fIawe.txt\fR documents Awe's dialect of ALGOL W, the run-time
behaviour of Awe-compiled programs, and how to interface ALGOL with C.

The \fBawe\fR command line may consist of a list of ALGOL W source file
names and an optional output file flag.  The source files will be
concatenated into a single source program.  

By default \fBawe\fR compiles an executable. The default name of the
executable is the name of the last ALGOL W source file with its
extension removed, on Windows systems an ".exe" suffix will be 
appended. 

If an ALGOL W program contains procedures with external references 
(cf. section 5.3.2.4 of the Language Description) then \fBawe\fR 
will write C prototypes for them to stdout. You will need to 
provide C functions for those, and link them into your program.

The most convenient way to maintain moderately complex ALGOL W
programs is to write a Makefile that uses the ready-make targets 
in \fIawe.mk\fR.  See \fBawe.mk\fR(7).
.SH "OPTIONS"
\fB-o\fR \fIexecutable\fR  specifies a name for the executable.  

\fB-c\fR \fIobject.c\fR compiles the ALGOL W program into a C
intermediate-code file. Use this if you need to link your ALGOL W
program with external C functions.

\fB-p\fR \fIobject.c\fR compiles a single ALGOL W procedure 
into a C function.

The following flags are meant for debugging purposes only:

\fB-i\fR adds code that initializes all numbers to zero and all strings
to spaces.

\fB-t\fR adds tracing hooks to all procedure calls. (Experimental.)
.SH "EXAMPLES"
.nf
awe program.alw

awe zap.alw \-c zap.c > externals.h
gcc zap.c externals.c \-lm \-lgc \-lawe \-o zap

awe procedure.alw -c procedure.c
.fi

Programs compiled by Awe should be able to produce ALGOL W specific
error messages for most runtime errors. Assertion errors always
indicate bugs in Awe. Segmentation faults should only occur in the
case of unbounded recursion. (However, if you link to C code you are
back on your own.)

"Call by Name" should used with great caution or great abandon.
\fBawe\fR notes the locations where Name formal parameters are defined,
and where expressions are used as Name actual parameters.
.SH "Awe and GCC"
Awe uses Gnu C, with its extensions, as an intermediate language. Awe
is responsible for all parsing, type checking and compile-time error
messages, it uses \fBgcc\fR to generate object code only. \fBgcc\fR
should stay completely invisible when you run \fBawe\fR, any messages
from \fBgcc\fR whatsoever should be considered to be bugs in Awe.
The C files \fBawe\fR generates are temporary and will not contain human
readable code: do not store them in a version control system or
distribute them; delete them when you delete object files.
.SH "Windows"
On Windows systems, Awe programs should not be linked to Boehm GC. 
The Awe run-library will use the C library's \fImalloc\fR function to 
allocate records, and they will not garbage collected. But ALGOL W 
programs can be provided with a procedure for explicity deallocating 
records, see the \fIFreeing Records\fR section of \fIawe.txt\fR.
.SH "PREREQUISITES"
The Gnu C compiler, the Boehm GC library.
.SH "FILES"
.TP
.B /usr/local/bin/awe
The Awe compiler.
.TP
.B /usr/local/share/doc/awe/awe.txt
The Awe ALGOL W documentation file.
.TP
.B /usr/local/include/awe.mk
The Awe general-purpose Makefile.
.TP
.B /usr/local/include/awe.h
The Awe runtime library header file. Include this in C files that define external procedures for ALGOL W programs.
.TP
.B /usr/local/lib/libawe.a
The runtime library for Awe-compiled programs.
.TP
.B /usr/local/include/aweio.h
The Awe Standard I/O System header file. (Experimental.)
.SH "SEE ALSO"
.nf
\fBawe.mk\fR(7)
\fBgcc\fR(1)
\fBgc\fR(3)
\fIALGOL W Language Description, June 1972\fR
.fi
.SH "VERSION"
2020 Version
.SH "AUTHOR"
Copyright 2017 by Glyn Webster.

Awe is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License and Lesser GNU General 
Public License as published by the Free Software Foundation, either 
version 3 of the License, or (at your option) any later version.
